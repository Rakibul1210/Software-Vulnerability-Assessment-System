const express = require('express');
const crypto = require('crypto');
const router = express.Router();

const { Users } = require('../models');
const { Vulnerability } = require('../models');

router.get('/', async (req, res) => {
    console.log('hello');
    const allVulerabilities = await Vulnerability.findAll({
        order: [
            ['id', 'DESC']
        ]
    });
    console.log(allVulerabilities);
    res.json(allVulerabilities);
})


router.post('/push', async (req, res) => {
    const vulnerability = req.body.data;
    const userID = req.body.uID;

    const user = await Users.findOne({
        where: {
            userID: userID
        },
        attributes: [ 'name' ]
    })

    const newVulnerability = {
        description: vulnerability.description[0],
        attackVector: vulnerability.attackVector,
        attackComplexity: vulnerability.attackComplexity,
        privilegesRequired: vulnerability.privilegesRequired === 'NONE' ? 'NONE' : vulnerability.privilegesRequired,
        userInteraction: vulnerability.userInteraction,
        scope: vulnerability.scope,
        confidentialityImpact: vulnerability.confidentialityImpact === 'NONE' ? 'NONE' : vulnerability.confidentialityImpact,
        integrityImpact: vulnerability.integrityImpact === 'NONE' ? 'NONE' : vulnerability.integrityImpact,
        availabilityImpact: vulnerability.availabilityImpact === 'NONE' ? 'NONE' : vulnerability.availabilityImpact,
        baseScore: vulnerability.baseScore,
        exploitabilityScore: vulnerability.exploitabilityScore,
        impactScore: vulnerability.impactScore,
        impactSubScore: vulnerability.impactSubScore,
        severity: vulnerability.severity,
        question1: vulnerability.q1,
        question2: vulnerability.q2,
        question3: vulnerability.q3,
        question4: vulnerability.q4,
        question5: vulnerability.q5,
        question6: vulnerability.q6,
        question7: vulnerability.q7,
        question8: vulnerability.q8,
        question9: vulnerability.q9,
        question10: vulnerability.q10,
        question11: vulnerability.q11,
        question12: vulnerability.q12,
        question13: vulnerability.q13,
        question14: vulnerability.q14,
        userID: userID,
        userName: user.name,
    }

    console.log("The vulnerability: ",newVulnerability);
    await Vulnerability.create(newVulnerability);

    res.json({message: 'vulnerrability pushed.'});
})

router.post('/getVulnerabilityByID', async (req, res) => {
    const id = req.body.id;

    console.log(id);

    const vulnerability = await Vulnerability.findOne({
        where: {
            id: id
        }
    })

    console.log(vulnerability);

    res.json({vulnerability: vulnerability});
})

router.post('/ownVulnerability', async (req, res) => {
    const uID = req.body.uID;

    const vulnerrabilities = await Vulnerability.findAll({
        where: {
            userID: uID
        }
    })

    res.json(vulnerrabilities);
})


module.exports = router;